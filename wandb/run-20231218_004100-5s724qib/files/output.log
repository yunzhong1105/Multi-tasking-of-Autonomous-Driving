/ssd5/CVPR2023comp/track1_train_data/det_yolov6/labels/train
/ssd5/CVPR2023comp/track1_train_data/det_yolov6/labels/val
use effidet
Initializing Detect head...
initial...
################################################################################
Train: Final numbers of valid images: 5493/ labels: 5493.
0.1s for dataset initialization.
Convert to COCO format
100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 610/610 [00:00<00:00, 95907.54it/s]
Convert to COCO format finished. Resutls saved in /ssd5/CVPR2023comp/track1_train_data/det_yolov6/annotations/instances_val.json
Val: Final numbers of valid images: 610/ labels: 610.
0.1s for dataset initialization.
################################################################################
Use all params
Loading state_dict from weights/yolov6m6.pt for fine-tuning...
Model: Model(
  (backbone): CSPBepBackbone_P6(
    (stem): RepVGGBlock(
      (nonlinearity): ReLU(inplace=True)
      (se): Identity()
      (rbr_dense): Sequential(
        (conv): Conv2d(3, 48, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(48, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
      )
      (rbr_1x1): Sequential(
        (conv): Conv2d(3, 48, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (bn): BatchNorm2d(48, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
      )
    )
    (ERBlock_2): Sequential(
      (0): RepVGGBlock(
        (nonlinearity): ReLU(inplace=True)
        (se): Identity()
        (rbr_dense): Sequential(
          (conv): Conv2d(48, 96, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
          (bn): BatchNorm2d(96, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        )
        (rbr_1x1): Sequential(
          (conv): Conv2d(48, 96, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (bn): BatchNorm2d(96, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        )
      )
      (1): BepC3(
        (cv1): Conv_C3(
          (conv): Conv2d(96, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): ReLU(inplace=True)
        )
        (cv2): Conv_C3(
          (conv): Conv2d(96, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): ReLU(inplace=True)
        )
        (cv3): Conv_C3(
          (conv): Conv2d(128, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(96, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): ReLU(inplace=True)
        )
        (m): RepBlock(
          (conv1): BottleRep(
            (conv1): RepVGGBlock(
              (nonlinearity): ReLU(inplace=True)
              (se): Identity()
              (rbr_identity): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (rbr_dense): Sequential(
                (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
              (rbr_1x1): Sequential(
                (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
            )
            (conv2): RepVGGBlock(
              (nonlinearity): ReLU(inplace=True)
              (se): Identity()
              (rbr_identity): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (rbr_dense): Sequential(
                (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
              (rbr_1x1): Sequential(
                (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
            )
          )
          (block): Sequential(
            (0): BottleRep(
              (conv1): RepVGGBlock(
                (nonlinearity): ReLU(inplace=True)
                (se): Identity()
                (rbr_identity): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (rbr_dense): Sequential(
                  (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                  (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                )
                (rbr_1x1): Sequential(
                  (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                )
              )
              (conv2): RepVGGBlock(
                (nonlinearity): ReLU(inplace=True)
                (se): Identity()
                (rbr_identity): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (rbr_dense): Sequential(
                  (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                  (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                )
                (rbr_1x1): Sequential(
                  (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                )
              )
            )
          )
        )
      )
    )
    (ERBlock_3): Sequential(
      (0): RepVGGBlock(
        (nonlinearity): ReLU(inplace=True)
        (se): Identity()
        (rbr_dense): Sequential(
          (conv): Conv2d(96, 192, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
          (bn): BatchNorm2d(192, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        )
        (rbr_1x1): Sequential(
          (conv): Conv2d(96, 192, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (bn): BatchNorm2d(192, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        )
      )
      (1): BepC3(
        (cv1): Conv_C3(
          (conv): Conv2d(192, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): ReLU(inplace=True)
        )
        (cv2): Conv_C3(
          (conv): Conv2d(192, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): ReLU(inplace=True)
        )
        (cv3): Conv_C3(
          (conv): Conv2d(256, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(192, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): ReLU(inplace=True)
        )
        (m): RepBlock(
          (conv1): BottleRep(
            (conv1): RepVGGBlock(
              (nonlinearity): ReLU(inplace=True)
              (se): Identity()
              (rbr_identity): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (rbr_dense): Sequential(
                (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
              (rbr_1x1): Sequential(
                (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
            )
            (conv2): RepVGGBlock(
              (nonlinearity): ReLU(inplace=True)
              (se): Identity()
              (rbr_identity): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (rbr_dense): Sequential(
                (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
              (rbr_1x1): Sequential(
                (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
            )
          )
          (block): Sequential(
            (0): BottleRep(
              (conv1): RepVGGBlock(
                (nonlinearity): ReLU(inplace=True)
                (se): Identity()
                (rbr_identity): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (rbr_dense): Sequential(
                  (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                  (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                )
                (rbr_1x1): Sequential(
                  (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                )
              )
              (conv2): RepVGGBlock(
                (nonlinearity): ReLU(inplace=True)
                (se): Identity()
                (rbr_identity): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (rbr_dense): Sequential(
                  (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                  (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                )
                (rbr_1x1): Sequential(
                  (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                )
              )
            )
            (1): BottleRep(
              (conv1): RepVGGBlock(
                (nonlinearity): ReLU(inplace=True)
                (se): Identity()
                (rbr_identity): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (rbr_dense): Sequential(
                  (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                  (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                )
                (rbr_1x1): Sequential(
                  (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                )
              )
              (conv2): RepVGGBlock(
                (nonlinearity): ReLU(inplace=True)
                (se): Identity()
                (rbr_identity): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (rbr_dense): Sequential(
                  (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                  (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                )
                (rbr_1x1): Sequential(
                  (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                )
              )
            )
          )
        )
      )
    )
    (ERBlock_4): Sequential(
      (0): RepVGGBlock(
        (nonlinearity): ReLU(inplace=True)
        (se): Identity()
        (rbr_dense): Sequential(
          (conv): Conv2d(192, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
          (bn): BatchNorm2d(384, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        )
        (rbr_1x1): Sequential(
          (conv): Conv2d(192, 384, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (bn): BatchNorm2d(384, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        )
      )
      (1): BepC3(
        (cv1): Conv_C3(
          (conv): Conv2d(384, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): ReLU(inplace=True)
        )
        (cv2): Conv_C3(
          (conv): Conv2d(384, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): ReLU(inplace=True)
        )
        (cv3): Conv_C3(
          (conv): Conv2d(512, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(384, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): ReLU(inplace=True)
        )
        (m): RepBlock(
          (conv1): BottleRep(
            (conv1): RepVGGBlock(
              (nonlinearity): ReLU(inplace=True)
              (se): Identity()
              (rbr_identity): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (rbr_dense): Sequential(
                (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
              (rbr_1x1): Sequential(
                (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
            )
            (conv2): RepVGGBlock(
              (nonlinearity): ReLU(inplace=True)
              (se): Identity()
              (rbr_identity): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (rbr_dense): Sequential(
                (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
              (rbr_1x1): Sequential(
                (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
            )
          )
          (block): Sequential(
            (0): BottleRep(
              (conv1): RepVGGBlock(
                (nonlinearity): ReLU(inplace=True)
                (se): Identity()
                (rbr_identity): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (rbr_dense): Sequential(
                  (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                  (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                )
                (rbr_1x1): Sequential(
                  (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                )
              )
              (conv2): RepVGGBlock(
                (nonlinearity): ReLU(inplace=True)
                (se): Identity()
                (rbr_identity): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (rbr_dense): Sequential(
                  (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                  (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                )
                (rbr_1x1): Sequential(
                  (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                )
              )
            )
            (1): BottleRep(
              (conv1): RepVGGBlock(
                (nonlinearity): ReLU(inplace=True)
                (se): Identity()
                (rbr_identity): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (rbr_dense): Sequential(
                  (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                  (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                )
                (rbr_1x1): Sequential(
                  (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                )
              )
              (conv2): RepVGGBlock(
                (nonlinearity): ReLU(inplace=True)
                (se): Identity()
                (rbr_identity): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (rbr_dense): Sequential(
                  (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                  (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                )
                (rbr_1x1): Sequential(
                  (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                )
              )
            )
            (2): BottleRep(
              (conv1): RepVGGBlock(
                (nonlinearity): ReLU(inplace=True)
                (se): Identity()
                (rbr_identity): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (rbr_dense): Sequential(
                  (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                  (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                )
                (rbr_1x1): Sequential(
                  (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                )
              )
              (conv2): RepVGGBlock(
                (nonlinearity): ReLU(inplace=True)
                (se): Identity()
                (rbr_identity): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (rbr_dense): Sequential(
                  (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                  (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                )
                (rbr_1x1): Sequential(
                  (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                )
              )
            )
            (3): BottleRep(
              (conv1): RepVGGBlock(
                (nonlinearity): ReLU(inplace=True)
                (se): Identity()
                (rbr_identity): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (rbr_dense): Sequential(
                  (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                  (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                )
                (rbr_1x1): Sequential(
                  (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                )
              )
              (conv2): RepVGGBlock(
                (nonlinearity): ReLU(inplace=True)
                (se): Identity()
                (rbr_identity): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (rbr_dense): Sequential(
                  (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                  (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                )
                (rbr_1x1): Sequential(
                  (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                )
              )
            )
          )
        )
      )
    )
    (ERBlock_5): Sequential(
      (0): RepVGGBlock(
        (nonlinearity): ReLU(inplace=True)
        (se): Identity()
        (rbr_dense): Sequential(
          (conv): Conv2d(384, 576, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
          (bn): BatchNorm2d(576, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        )
        (rbr_1x1): Sequential(
          (conv): Conv2d(384, 576, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (bn): BatchNorm2d(576, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        )
      )
      (1): BepC3(
        (cv1): Conv_C3(
          (conv): Conv2d(576, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(384, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): ReLU(inplace=True)
        )
        (cv2): Conv_C3(
          (conv): Conv2d(576, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(384, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): ReLU(inplace=True)
        )
        (cv3): Conv_C3(
          (conv): Conv2d(768, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(576, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): ReLU(inplace=True)
        )
        (m): RepBlock(
          (conv1): BottleRep(
            (conv1): RepVGGBlock(
              (nonlinearity): ReLU(inplace=True)
              (se): Identity()
              (rbr_identity): BatchNorm2d(384, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (rbr_dense): Sequential(
                (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(384, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
              (rbr_1x1): Sequential(
                (conv): Conv2d(384, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(384, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
            )
            (conv2): RepVGGBlock(
              (nonlinearity): ReLU(inplace=True)
              (se): Identity()
              (rbr_identity): BatchNorm2d(384, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (rbr_dense): Sequential(
                (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(384, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
              (rbr_1x1): Sequential(
                (conv): Conv2d(384, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(384, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
            )
          )
          (block): Sequential(
            (0): BottleRep(
              (conv1): RepVGGBlock(
                (nonlinearity): ReLU(inplace=True)
                (se): Identity()
                (rbr_identity): BatchNorm2d(384, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (rbr_dense): Sequential(
                  (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                  (bn): BatchNorm2d(384, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                )
                (rbr_1x1): Sequential(
                  (conv): Conv2d(384, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(384, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                )
              )
              (conv2): RepVGGBlock(
                (nonlinearity): ReLU(inplace=True)
                (se): Identity()
                (rbr_identity): BatchNorm2d(384, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (rbr_dense): Sequential(
                  (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                  (bn): BatchNorm2d(384, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                )
                (rbr_1x1): Sequential(
                  (conv): Conv2d(384, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(384, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                )
              )
            )
          )
        )
      )
    )
    (ERBlock_6): Sequential(
      (0): RepVGGBlock(
        (nonlinearity): ReLU(inplace=True)
        (se): Identity()
        (rbr_dense): Sequential(
          (conv): Conv2d(576, 768, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
          (bn): BatchNorm2d(768, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        )
        (rbr_1x1): Sequential(
          (conv): Conv2d(576, 768, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (bn): BatchNorm2d(768, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        )
      )
      (1): BepC3(
        (cv1): Conv_C3(
          (conv): Conv2d(768, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): ReLU(inplace=True)
        )
        (cv2): Conv_C3(
          (conv): Conv2d(768, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): ReLU(inplace=True)
        )
        (cv3): Conv_C3(
          (conv): Conv2d(1024, 768, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(768, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): ReLU(inplace=True)
        )
        (m): RepBlock(
          (conv1): BottleRep(
            (conv1): RepVGGBlock(
              (nonlinearity): ReLU(inplace=True)
              (se): Identity()
              (rbr_identity): BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (rbr_dense): Sequential(
                (conv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
              (rbr_1x1): Sequential(
                (conv): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
            )
            (conv2): RepVGGBlock(
              (nonlinearity): ReLU(inplace=True)
              (se): Identity()
              (rbr_identity): BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (rbr_dense): Sequential(
                (conv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
              (rbr_1x1): Sequential(
                (conv): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
            )
          )
          (block): Sequential(
            (0): BottleRep(
              (conv1): RepVGGBlock(
                (nonlinearity): ReLU(inplace=True)
                (se): Identity()
                (rbr_identity): BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (rbr_dense): Sequential(
                  (conv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                  (bn): BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                )
                (rbr_1x1): Sequential(
                  (conv): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                )
              )
              (conv2): RepVGGBlock(
                (nonlinearity): ReLU(inplace=True)
                (se): Identity()
                (rbr_identity): BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (rbr_dense): Sequential(
                  (conv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                  (bn): BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                )
                (rbr_1x1): Sequential(
                  (conv): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                )
              )
            )
          )
        )
      )
      (2): SimSPPF(
        (cv1): SimConv(
          (conv): Conv2d(768, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(384, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): ReLU(inplace=True)
        )
        (cv2): SimConv(
          (conv): Conv2d(1536, 768, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(768, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): ReLU(inplace=True)
        )
        (m): MaxPool2d(kernel_size=5, stride=1, padding=2, dilation=1, ceil_mode=False)
      )
    )
  )
  (neck): CSPRepBiFPANNeck_P6(
    (reduce_layer0): SimConv(
      (conv): Conv2d(768, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(384, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
      (act): ReLU(inplace=True)
    )
    (Bifusion0): BiFusion(
      (cv1): SimConv(
        (conv): Conv2d(576, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(384, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
      (cv2): SimConv(
        (conv): Conv2d(384, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(384, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
      (cv3): SimConv(
        (conv): Conv2d(1152, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(384, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
      (upsample): Transpose(
        (upsample_transpose): ConvTranspose2d(384, 384, kernel_size=(2, 2), stride=(2, 2))
      )
      (downsample): SimConv(
        (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(384, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
    )
    (Rep_p5): BepC3(
      (cv1): Conv_C3(
        (conv): Conv2d(384, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
      (cv2): Conv_C3(
        (conv): Conv2d(384, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
      (cv3): Conv_C3(
        (conv): Conv2d(512, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(384, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
      (m): RepBlock(
        (conv1): BottleRep(
          (conv1): RepVGGBlock(
            (nonlinearity): ReLU(inplace=True)
            (se): Identity()
            (rbr_identity): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (rbr_dense): Sequential(
              (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            )
            (rbr_1x1): Sequential(
              (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            )
          )
          (conv2): RepVGGBlock(
            (nonlinearity): ReLU(inplace=True)
            (se): Identity()
            (rbr_identity): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (rbr_dense): Sequential(
              (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            )
            (rbr_1x1): Sequential(
              (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            )
          )
        )
        (block): Sequential(
          (0): BottleRep(
            (conv1): RepVGGBlock(
              (nonlinearity): ReLU(inplace=True)
              (se): Identity()
              (rbr_identity): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (rbr_dense): Sequential(
                (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
              (rbr_1x1): Sequential(
                (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
            )
            (conv2): RepVGGBlock(
              (nonlinearity): ReLU(inplace=True)
              (se): Identity()
              (rbr_identity): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (rbr_dense): Sequential(
                (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
              (rbr_1x1): Sequential(
                (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
            )
          )
          (1): BottleRep(
            (conv1): RepVGGBlock(
              (nonlinearity): ReLU(inplace=True)
              (se): Identity()
              (rbr_identity): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (rbr_dense): Sequential(
                (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
              (rbr_1x1): Sequential(
                (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
            )
            (conv2): RepVGGBlock(
              (nonlinearity): ReLU(inplace=True)
              (se): Identity()
              (rbr_identity): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (rbr_dense): Sequential(
                (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
              (rbr_1x1): Sequential(
                (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
            )
          )
        )
      )
    )
    (reduce_layer1): SimConv(
      (conv): Conv2d(384, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(192, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
      (act): ReLU(inplace=True)
    )
    (Bifusion1): BiFusion(
      (cv1): SimConv(
        (conv): Conv2d(384, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(192, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
      (cv2): SimConv(
        (conv): Conv2d(192, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(192, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
      (cv3): SimConv(
        (conv): Conv2d(576, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(192, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
      (upsample): Transpose(
        (upsample_transpose): ConvTranspose2d(192, 192, kernel_size=(2, 2), stride=(2, 2))
      )
      (downsample): SimConv(
        (conv): Conv2d(192, 192, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(192, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
    )
    (Rep_p4): BepC3(
      (cv1): Conv_C3(
        (conv): Conv2d(192, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
      (cv2): Conv_C3(
        (conv): Conv2d(192, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
      (cv3): Conv_C3(
        (conv): Conv2d(256, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(192, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
      (m): RepBlock(
        (conv1): BottleRep(
          (conv1): RepVGGBlock(
            (nonlinearity): ReLU(inplace=True)
            (se): Identity()
            (rbr_identity): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (rbr_dense): Sequential(
              (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            )
            (rbr_1x1): Sequential(
              (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            )
          )
          (conv2): RepVGGBlock(
            (nonlinearity): ReLU(inplace=True)
            (se): Identity()
            (rbr_identity): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (rbr_dense): Sequential(
              (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            )
            (rbr_1x1): Sequential(
              (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            )
          )
        )
        (block): Sequential(
          (0): BottleRep(
            (conv1): RepVGGBlock(
              (nonlinearity): ReLU(inplace=True)
              (se): Identity()
              (rbr_identity): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (rbr_dense): Sequential(
                (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
              (rbr_1x1): Sequential(
                (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
            )
            (conv2): RepVGGBlock(
              (nonlinearity): ReLU(inplace=True)
              (se): Identity()
              (rbr_identity): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (rbr_dense): Sequential(
                (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
              (rbr_1x1): Sequential(
                (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
            )
          )
          (1): BottleRep(
            (conv1): RepVGGBlock(
              (nonlinearity): ReLU(inplace=True)
              (se): Identity()
              (rbr_identity): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (rbr_dense): Sequential(
                (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
              (rbr_1x1): Sequential(
                (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
            )
            (conv2): RepVGGBlock(
              (nonlinearity): ReLU(inplace=True)
              (se): Identity()
              (rbr_identity): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (rbr_dense): Sequential(
                (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
              (rbr_1x1): Sequential(
                (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
            )
          )
        )
      )
    )
    (reduce_layer2): SimConv(
      (conv): Conv2d(192, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(96, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
      (act): ReLU(inplace=True)
    )
    (Bifusion2): BiFusion(
      (cv1): SimConv(
        (conv): Conv2d(192, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(96, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
      (cv2): SimConv(
        (conv): Conv2d(96, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(96, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
      (cv3): SimConv(
        (conv): Conv2d(288, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(96, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
      (upsample): Transpose(
        (upsample_transpose): ConvTranspose2d(96, 96, kernel_size=(2, 2), stride=(2, 2))
      )
      (downsample): SimConv(
        (conv): Conv2d(96, 96, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(96, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
    )
    (Rep_p3): BepC3(
      (cv1): Conv_C3(
        (conv): Conv2d(96, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
      (cv2): Conv_C3(
        (conv): Conv2d(96, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
      (cv3): Conv_C3(
        (conv): Conv2d(128, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(96, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
      (m): RepBlock(
        (conv1): BottleRep(
          (conv1): RepVGGBlock(
            (nonlinearity): ReLU(inplace=True)
            (se): Identity()
            (rbr_identity): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (rbr_dense): Sequential(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            )
            (rbr_1x1): Sequential(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            )
          )
          (conv2): RepVGGBlock(
            (nonlinearity): ReLU(inplace=True)
            (se): Identity()
            (rbr_identity): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (rbr_dense): Sequential(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            )
            (rbr_1x1): Sequential(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            )
          )
        )
        (block): Sequential(
          (0): BottleRep(
            (conv1): RepVGGBlock(
              (nonlinearity): ReLU(inplace=True)
              (se): Identity()
              (rbr_identity): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (rbr_dense): Sequential(
                (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
              (rbr_1x1): Sequential(
                (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
            )
            (conv2): RepVGGBlock(
              (nonlinearity): ReLU(inplace=True)
              (se): Identity()
              (rbr_identity): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (rbr_dense): Sequential(
                (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
              (rbr_1x1): Sequential(
                (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
            )
          )
          (1): BottleRep(
            (conv1): RepVGGBlock(
              (nonlinearity): ReLU(inplace=True)
              (se): Identity()
              (rbr_identity): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (rbr_dense): Sequential(
                (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
              (rbr_1x1): Sequential(
                (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
            )
            (conv2): RepVGGBlock(
              (nonlinearity): ReLU(inplace=True)
              (se): Identity()
              (rbr_identity): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (rbr_dense): Sequential(
                (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
              (rbr_1x1): Sequential(
                (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
            )
          )
        )
      )
    )
    (downsample2): SimConv(
      (conv): Conv2d(96, 96, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn): BatchNorm2d(96, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
      (act): ReLU(inplace=True)
    )
    (Rep_n4): BepC3(
      (cv1): Conv_C3(
        (conv): Conv2d(192, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
      (cv2): Conv_C3(
        (conv): Conv2d(192, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
      (cv3): Conv_C3(
        (conv): Conv2d(256, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(192, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
      (m): RepBlock(
        (conv1): BottleRep(
          (conv1): RepVGGBlock(
            (nonlinearity): ReLU(inplace=True)
            (se): Identity()
            (rbr_identity): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (rbr_dense): Sequential(
              (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            )
            (rbr_1x1): Sequential(
              (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            )
          )
          (conv2): RepVGGBlock(
            (nonlinearity): ReLU(inplace=True)
            (se): Identity()
            (rbr_identity): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (rbr_dense): Sequential(
              (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            )
            (rbr_1x1): Sequential(
              (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            )
          )
        )
        (block): Sequential(
          (0): BottleRep(
            (conv1): RepVGGBlock(
              (nonlinearity): ReLU(inplace=True)
              (se): Identity()
              (rbr_identity): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (rbr_dense): Sequential(
                (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
              (rbr_1x1): Sequential(
                (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
            )
            (conv2): RepVGGBlock(
              (nonlinearity): ReLU(inplace=True)
              (se): Identity()
              (rbr_identity): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (rbr_dense): Sequential(
                (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
              (rbr_1x1): Sequential(
                (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
            )
          )
          (1): BottleRep(
            (conv1): RepVGGBlock(
              (nonlinearity): ReLU(inplace=True)
              (se): Identity()
              (rbr_identity): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (rbr_dense): Sequential(
                (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
              (rbr_1x1): Sequential(
                (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
            )
            (conv2): RepVGGBlock(
              (nonlinearity): ReLU(inplace=True)
              (se): Identity()
              (rbr_identity): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (rbr_dense): Sequential(
                (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
              (rbr_1x1): Sequential(
                (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
            )
          )
        )
      )
    )
    (downsample1): SimConv(
      (conv): Conv2d(192, 192, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn): BatchNorm2d(192, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
      (act): ReLU(inplace=True)
    )
    (Rep_n5): BepC3(
      (cv1): Conv_C3(
        (conv): Conv2d(384, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
      (cv2): Conv_C3(
        (conv): Conv2d(384, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
      (cv3): Conv_C3(
        (conv): Conv2d(512, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(384, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
      (m): RepBlock(
        (conv1): BottleRep(
          (conv1): RepVGGBlock(
            (nonlinearity): ReLU(inplace=True)
            (se): Identity()
            (rbr_identity): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (rbr_dense): Sequential(
              (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            )
            (rbr_1x1): Sequential(
              (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            )
          )
          (conv2): RepVGGBlock(
            (nonlinearity): ReLU(inplace=True)
            (se): Identity()
            (rbr_identity): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (rbr_dense): Sequential(
              (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            )
            (rbr_1x1): Sequential(
              (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            )
          )
        )
        (block): Sequential(
          (0): BottleRep(
            (conv1): RepVGGBlock(
              (nonlinearity): ReLU(inplace=True)
              (se): Identity()
              (rbr_identity): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (rbr_dense): Sequential(
                (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
              (rbr_1x1): Sequential(
                (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
            )
            (conv2): RepVGGBlock(
              (nonlinearity): ReLU(inplace=True)
              (se): Identity()
              (rbr_identity): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (rbr_dense): Sequential(
                (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
              (rbr_1x1): Sequential(
                (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
            )
          )
          (1): BottleRep(
            (conv1): RepVGGBlock(
              (nonlinearity): ReLU(inplace=True)
              (se): Identity()
              (rbr_identity): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (rbr_dense): Sequential(
                (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
              (rbr_1x1): Sequential(
                (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
            )
            (conv2): RepVGGBlock(
              (nonlinearity): ReLU(inplace=True)
              (se): Identity()
              (rbr_identity): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (rbr_dense): Sequential(
                (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
              (rbr_1x1): Sequential(
                (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
            )
          )
        )
      )
    )
    (downsample0): SimConv(
      (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn): BatchNorm2d(384, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
      (act): ReLU(inplace=True)
    )
    (Rep_n6): BepC3(
      (cv1): Conv_C3(
        (conv): Conv2d(768, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
      (cv2): Conv_C3(
        (conv): Conv2d(768, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
      (cv3): Conv_C3(
        (conv): Conv2d(1024, 768, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(768, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
      (m): RepBlock(
        (conv1): BottleRep(
          (conv1): RepVGGBlock(
            (nonlinearity): ReLU(inplace=True)
            (se): Identity()
            (rbr_identity): BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (rbr_dense): Sequential(
              (conv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            )
            (rbr_1x1): Sequential(
              (conv): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            )
          )
          (conv2): RepVGGBlock(
            (nonlinearity): ReLU(inplace=True)
            (se): Identity()
            (rbr_identity): BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (rbr_dense): Sequential(
              (conv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            )
            (rbr_1x1): Sequential(
              (conv): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            )
          )
        )
        (block): Sequential(
          (0): BottleRep(
            (conv1): RepVGGBlock(
              (nonlinearity): ReLU(inplace=True)
              (se): Identity()
              (rbr_identity): BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (rbr_dense): Sequential(
                (conv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
              (rbr_1x1): Sequential(
                (conv): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
            )
            (conv2): RepVGGBlock(
              (nonlinearity): ReLU(inplace=True)
              (se): Identity()
              (rbr_identity): BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (rbr_dense): Sequential(
                (conv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
              (rbr_1x1): Sequential(
                (conv): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
            )
          )
          (1): BottleRep(
            (conv1): RepVGGBlock(
              (nonlinearity): ReLU(inplace=True)
              (se): Identity()
              (rbr_identity): BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (rbr_dense): Sequential(
                (conv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
              (rbr_1x1): Sequential(
                (conv): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
            )
            (conv2): RepVGGBlock(
              (nonlinearity): ReLU(inplace=True)
              (se): Identity()
              (rbr_identity): BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (rbr_dense): Sequential(
                (conv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
              (rbr_1x1): Sequential(
                (conv): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
            )
          )
        )
      )
    )
  )
  (detect): Detect(
    (proj_conv): Conv2d(17, 1, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (spp1): PAPPM(
      (scale1): Sequential(
        (0): AvgPool2d(kernel_size=5, stride=2, padding=2)
        (1): BatchNorm2d(192, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(192, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (scale2): Sequential(
        (0): AvgPool2d(kernel_size=9, stride=4, padding=4)
        (1): BatchNorm2d(192, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(192, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (scale3): Sequential(
        (0): AvgPool2d(kernel_size=17, stride=8, padding=8)
        (1): BatchNorm2d(192, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(192, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (scale4): Sequential(
        (0): AdaptiveAvgPool2d(output_size=(1, 1))
        (1): BatchNorm2d(192, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(192, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (scale0): Sequential(
        (0): BatchNorm2d(192, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(192, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (scale_process): Sequential(
        (0): BatchNorm2d(384, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4, bias=False)
      )
      (compression): Sequential(
        (0): BatchNorm2d(480, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(480, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (shortcut): Sequential(
        (0): BatchNorm2d(192, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(192, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (spp2): PAPPM(
      (scale1): Sequential(
        (0): AvgPool2d(kernel_size=5, stride=2, padding=2)
        (1): BatchNorm2d(384, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(384, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (scale2): Sequential(
        (0): AvgPool2d(kernel_size=9, stride=4, padding=4)
        (1): BatchNorm2d(384, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(384, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (scale3): Sequential(
        (0): AvgPool2d(kernel_size=17, stride=8, padding=8)
        (1): BatchNorm2d(384, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(384, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (scale4): Sequential(
        (0): AdaptiveAvgPool2d(output_size=(1, 1))
        (1): BatchNorm2d(384, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(384, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (scale0): Sequential(
        (0): BatchNorm2d(384, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(384, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (scale_process): Sequential(
        (0): BatchNorm2d(384, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4, bias=False)
      )
      (compression): Sequential(
        (0): BatchNorm2d(480, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(480, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (shortcut): Sequential(
        (0): BatchNorm2d(384, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(384, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (spp3): PAPPM(
      (scale1): Sequential(
        (0): AvgPool2d(kernel_size=5, stride=2, padding=2)
        (1): BatchNorm2d(768, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(768, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (scale2): Sequential(
        (0): AvgPool2d(kernel_size=9, stride=4, padding=4)
        (1): BatchNorm2d(768, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(768, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (scale3): Sequential(
        (0): AvgPool2d(kernel_size=17, stride=8, padding=8)
        (1): BatchNorm2d(768, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(768, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (scale4): Sequential(
        (0): AdaptiveAvgPool2d(output_size=(1, 1))
        (1): BatchNorm2d(768, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(768, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (scale0): Sequential(
        (0): BatchNorm2d(768, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(768, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (scale_process): Sequential(
        (0): BatchNorm2d(384, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4, bias=False)
      )
      (compression): Sequential(
        (0): BatchNorm2d(480, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(480, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (shortcut): Sequential(
        (0): BatchNorm2d(768, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(768, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (seg_head): segmenthead(
      (bn1): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
      (conv1): Conv2d(256, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 20, kernel_size=(1, 1), stride=(1, 1))
    )
    (stems): ModuleList(
      (0): Conv(
        (conv): Conv2d(96, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(96, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (1): Conv(
        (conv): Conv2d(192, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(192, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (2): Conv(
        (conv): Conv2d(384, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(384, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (3): Conv(
        (conv): Conv2d(768, 768, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(768, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
    )
    (cls_convs): ModuleList(
      (0): Conv(
        (conv): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(96, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (1): Conv(
        (conv): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(192, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (2): Conv(
        (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(384, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (3): Conv(
        (conv): Conv2d(768, 768, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(768, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
    )
    (reg_convs): ModuleList(
      (0): Conv(
        (conv): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(96, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (1): Conv(
        (conv): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(192, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (2): Conv(
        (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(384, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (3): Conv(
        (conv): Conv2d(768, 768, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(768, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
    )
    (cls_preds): ModuleList(
      (0): Conv2d(96, 45, kernel_size=(1, 1), stride=(1, 1))
      (1): Conv2d(192, 45, kernel_size=(1, 1), stride=(1, 1))
      (2): Conv2d(384, 45, kernel_size=(1, 1), stride=(1, 1))
      (3): Conv2d(768, 45, kernel_size=(1, 1), stride=(1, 1))
    )
    (reg_preds): ModuleList(
      (0): Conv2d(96, 68, kernel_size=(1, 1), stride=(1, 1))
      (1): Conv2d(192, 68, kernel_size=(1, 1), stride=(1, 1))
      (2): Conv2d(384, 68, kernel_size=(1, 1), stride=(1, 1))
      (3): Conv2d(768, 68, kernel_size=(1, 1), stride=(1, 1))
    )
  )
)
Training start...
     Epoch  iou_loss  dfl_loss  cls_loss  seg-loss
  0%|          | 0/687 [00:01<?, ?it/s]
Traceback (most recent call last):
  File "tools/train.py", line 176, in <module>
    main(args)
  File "tools/train.py", line 165, in main
    trainer.train()
  File "/home/re6101029/CVPR2023comp/yolov6/yolov6/core/engine.py", line 263, in train
    self.train_in_loop(self.epoch)
  File "/home/re6101029/CVPR2023comp/yolov6/yolov6/core/engine.py", line 283, in train_in_loop
    self.train_in_steps(epoch_num, self.step)
  File "/home/re6101029/CVPR2023comp/yolov6/yolov6/core/engine.py", line 331, in train_in_steps
    preds, s_featmaps = self.model(images)
  File "/home/re6101029/miniconda3/envs/CVPR/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/re6101029/CVPR2023comp/yolov6/yolov6/models/yolo.py", line 34, in forward
    x = self.backbone(x)
  File "/home/re6101029/miniconda3/envs/CVPR/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/re6101029/CVPR2023comp/yolov6/yolov6/models/efficientrep.py", line 485, in forward
    x = self.stem(x)
  File "/home/re6101029/miniconda3/envs/CVPR/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/re6101029/CVPR2023comp/yolov6/yolov6/layers/common.py", line 266, in forward
    return self.nonlinearity(self.se(self.rbr_dense(inputs) + self.rbr_1x1(inputs) + id_out))
  File "/home/re6101029/miniconda3/envs/CVPR/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/re6101029/miniconda3/envs/CVPR/lib/python3.8/site-packages/torch/nn/modules/container.py", line 217, in forward
    input = module(input)
  File "/home/re6101029/miniconda3/envs/CVPR/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/re6101029/miniconda3/envs/CVPR/lib/python3.8/site-packages/torch/nn/modules/conv.py", line 463, in forward
    return self._conv_forward(input, self.weight, self.bias)
  File "/home/re6101029/miniconda3/envs/CVPR/lib/python3.8/site-packages/torch/nn/modules/conv.py", line 459, in _conv_forward
    return F.conv2d(input, weight, bias, self.stride,
KeyboardInterrupt
  0%|          | 0/687 [00:01<?, ?it/s]