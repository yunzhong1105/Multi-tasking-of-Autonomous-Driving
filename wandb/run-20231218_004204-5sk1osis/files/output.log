################################################################################
Load from runs/train/exp43/weights/last_ckpt.pt
################################################################################
/ssd5/CVPR2023comp/track1_train_data/det_yolov6/labels/train
/ssd5/CVPR2023comp/track1_train_data/det_yolov6/labels/val
Train: Final numbers of valid images: 5493/ labels: 5493.
0.1s for dataset initialization.
Convert to COCO format
100%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 610/610 [00:00<00:00, 158756.85it/s]
Convert to COCO format finished. Resutls saved in /ssd5/CVPR2023comp/track1_train_data/det_yolov6/annotations/instances_val.json
Val: Final numbers of valid images: 610/ labels: 610.
0.1s for dataset initialization.
use effidet
Initializing Detect head...
initial...
################################################################################
Loading state_dict from weights/yolov6m6.pt for fine-tuning...
################################################################################
Use all params
================================================================================
Normal loading
Model: Model(
  (backbone): CSPBepBackbone_P6(
    (stem): RepVGGBlock(
      (nonlinearity): ReLU(inplace=True)
      (se): Identity()
      (rbr_dense): Sequential(
        (conv): Conv2d(3, 48, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(48, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
      )
      (rbr_1x1): Sequential(
        (conv): Conv2d(3, 48, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (bn): BatchNorm2d(48, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
      )
    )
    (ERBlock_2): Sequential(
      (0): RepVGGBlock(
        (nonlinearity): ReLU(inplace=True)
        (se): Identity()
        (rbr_dense): Sequential(
          (conv): Conv2d(48, 96, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
          (bn): BatchNorm2d(96, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        )
        (rbr_1x1): Sequential(
          (conv): Conv2d(48, 96, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (bn): BatchNorm2d(96, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        )
      )
      (1): BepC3(
        (cv1): Conv_C3(
          (conv): Conv2d(96, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): ReLU(inplace=True)
        )
        (cv2): Conv_C3(
          (conv): Conv2d(96, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): ReLU(inplace=True)
        )
        (cv3): Conv_C3(
          (conv): Conv2d(128, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(96, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): ReLU(inplace=True)
        )
        (m): RepBlock(
          (conv1): BottleRep(
            (conv1): RepVGGBlock(
              (nonlinearity): ReLU(inplace=True)
              (se): Identity()
              (rbr_identity): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (rbr_dense): Sequential(
                (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
              (rbr_1x1): Sequential(
                (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
            )
            (conv2): RepVGGBlock(
              (nonlinearity): ReLU(inplace=True)
              (se): Identity()
              (rbr_identity): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (rbr_dense): Sequential(
                (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
              (rbr_1x1): Sequential(
                (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
            )
          )
          (block): Sequential(
            (0): BottleRep(
              (conv1): RepVGGBlock(
                (nonlinearity): ReLU(inplace=True)
                (se): Identity()
                (rbr_identity): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (rbr_dense): Sequential(
                  (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                  (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                )
                (rbr_1x1): Sequential(
                  (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                )
              )
              (conv2): RepVGGBlock(
                (nonlinearity): ReLU(inplace=True)
                (se): Identity()
                (rbr_identity): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (rbr_dense): Sequential(
                  (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                  (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                )
                (rbr_1x1): Sequential(
                  (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                )
              )
            )
          )
        )
      )
    )
    (ERBlock_3): Sequential(
      (0): RepVGGBlock(
        (nonlinearity): ReLU(inplace=True)
        (se): Identity()
        (rbr_dense): Sequential(
          (conv): Conv2d(96, 192, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
          (bn): BatchNorm2d(192, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        )
        (rbr_1x1): Sequential(
          (conv): Conv2d(96, 192, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (bn): BatchNorm2d(192, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        )
      )
      (1): BepC3(
        (cv1): Conv_C3(
          (conv): Conv2d(192, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): ReLU(inplace=True)
        )
        (cv2): Conv_C3(
          (conv): Conv2d(192, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): ReLU(inplace=True)
        )
        (cv3): Conv_C3(
          (conv): Conv2d(256, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(192, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): ReLU(inplace=True)
        )
        (m): RepBlock(
          (conv1): BottleRep(
            (conv1): RepVGGBlock(
              (nonlinearity): ReLU(inplace=True)
              (se): Identity()
              (rbr_identity): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (rbr_dense): Sequential(
                (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
              (rbr_1x1): Sequential(
                (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
            )
            (conv2): RepVGGBlock(
              (nonlinearity): ReLU(inplace=True)
              (se): Identity()
              (rbr_identity): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (rbr_dense): Sequential(
                (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
              (rbr_1x1): Sequential(
                (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
            )
          )
          (block): Sequential(
            (0): BottleRep(
              (conv1): RepVGGBlock(
                (nonlinearity): ReLU(inplace=True)
                (se): Identity()
                (rbr_identity): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (rbr_dense): Sequential(
                  (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                  (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                )
                (rbr_1x1): Sequential(
                  (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                )
              )
              (conv2): RepVGGBlock(
                (nonlinearity): ReLU(inplace=True)
                (se): Identity()
                (rbr_identity): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (rbr_dense): Sequential(
                  (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                  (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                )
                (rbr_1x1): Sequential(
                  (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                )
              )
            )
            (1): BottleRep(
              (conv1): RepVGGBlock(
                (nonlinearity): ReLU(inplace=True)
                (se): Identity()
                (rbr_identity): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (rbr_dense): Sequential(
                  (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                  (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                )
                (rbr_1x1): Sequential(
                  (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                )
              )
              (conv2): RepVGGBlock(
                (nonlinearity): ReLU(inplace=True)
                (se): Identity()
                (rbr_identity): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (rbr_dense): Sequential(
                  (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                  (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                )
                (rbr_1x1): Sequential(
                  (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                )
              )
            )
          )
        )
      )
    )
    (ERBlock_4): Sequential(
      (0): RepVGGBlock(
        (nonlinearity): ReLU(inplace=True)
        (se): Identity()
        (rbr_dense): Sequential(
          (conv): Conv2d(192, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
          (bn): BatchNorm2d(384, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        )
        (rbr_1x1): Sequential(
          (conv): Conv2d(192, 384, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (bn): BatchNorm2d(384, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        )
      )
      (1): BepC3(
        (cv1): Conv_C3(
          (conv): Conv2d(384, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): ReLU(inplace=True)
        )
        (cv2): Conv_C3(
          (conv): Conv2d(384, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): ReLU(inplace=True)
        )
        (cv3): Conv_C3(
          (conv): Conv2d(512, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(384, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): ReLU(inplace=True)
        )
        (m): RepBlock(
          (conv1): BottleRep(
            (conv1): RepVGGBlock(
              (nonlinearity): ReLU(inplace=True)
              (se): Identity()
              (rbr_identity): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (rbr_dense): Sequential(
                (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
              (rbr_1x1): Sequential(
                (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
            )
            (conv2): RepVGGBlock(
              (nonlinearity): ReLU(inplace=True)
              (se): Identity()
              (rbr_identity): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (rbr_dense): Sequential(
                (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
              (rbr_1x1): Sequential(
                (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
            )
          )
          (block): Sequential(
            (0): BottleRep(
              (conv1): RepVGGBlock(
                (nonlinearity): ReLU(inplace=True)
                (se): Identity()
                (rbr_identity): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (rbr_dense): Sequential(
                  (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                  (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                )
                (rbr_1x1): Sequential(
                  (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                )
              )
              (conv2): RepVGGBlock(
                (nonlinearity): ReLU(inplace=True)
                (se): Identity()
                (rbr_identity): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (rbr_dense): Sequential(
                  (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                  (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                )
                (rbr_1x1): Sequential(
                  (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                )
              )
            )
            (1): BottleRep(
              (conv1): RepVGGBlock(
                (nonlinearity): ReLU(inplace=True)
                (se): Identity()
                (rbr_identity): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (rbr_dense): Sequential(
                  (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                  (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                )
                (rbr_1x1): Sequential(
                  (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                )
              )
              (conv2): RepVGGBlock(
                (nonlinearity): ReLU(inplace=True)
                (se): Identity()
                (rbr_identity): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (rbr_dense): Sequential(
                  (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                  (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                )
                (rbr_1x1): Sequential(
                  (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                )
              )
            )
            (2): BottleRep(
              (conv1): RepVGGBlock(
                (nonlinearity): ReLU(inplace=True)
                (se): Identity()
                (rbr_identity): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (rbr_dense): Sequential(
                  (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                  (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                )
                (rbr_1x1): Sequential(
                  (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                )
              )
              (conv2): RepVGGBlock(
                (nonlinearity): ReLU(inplace=True)
                (se): Identity()
                (rbr_identity): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (rbr_dense): Sequential(
                  (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                  (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                )
                (rbr_1x1): Sequential(
                  (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                )
              )
            )
            (3): BottleRep(
              (conv1): RepVGGBlock(
                (nonlinearity): ReLU(inplace=True)
                (se): Identity()
                (rbr_identity): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (rbr_dense): Sequential(
                  (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                  (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                )
                (rbr_1x1): Sequential(
                  (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                )
              )
              (conv2): RepVGGBlock(
                (nonlinearity): ReLU(inplace=True)
                (se): Identity()
                (rbr_identity): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (rbr_dense): Sequential(
                  (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                  (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                )
                (rbr_1x1): Sequential(
                  (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                )
              )
            )
          )
        )
      )
    )
    (ERBlock_5): Sequential(
      (0): RepVGGBlock(
        (nonlinearity): ReLU(inplace=True)
        (se): Identity()
        (rbr_dense): Sequential(
          (conv): Conv2d(384, 576, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
          (bn): BatchNorm2d(576, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        )
        (rbr_1x1): Sequential(
          (conv): Conv2d(384, 576, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (bn): BatchNorm2d(576, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        )
      )
      (1): BepC3(
        (cv1): Conv_C3(
          (conv): Conv2d(576, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(384, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): ReLU(inplace=True)
        )
        (cv2): Conv_C3(
          (conv): Conv2d(576, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(384, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): ReLU(inplace=True)
        )
        (cv3): Conv_C3(
          (conv): Conv2d(768, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(576, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): ReLU(inplace=True)
        )
        (m): RepBlock(
          (conv1): BottleRep(
            (conv1): RepVGGBlock(
              (nonlinearity): ReLU(inplace=True)
              (se): Identity()
              (rbr_identity): BatchNorm2d(384, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (rbr_dense): Sequential(
                (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(384, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
              (rbr_1x1): Sequential(
                (conv): Conv2d(384, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(384, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
            )
            (conv2): RepVGGBlock(
              (nonlinearity): ReLU(inplace=True)
              (se): Identity()
              (rbr_identity): BatchNorm2d(384, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (rbr_dense): Sequential(
                (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(384, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
              (rbr_1x1): Sequential(
                (conv): Conv2d(384, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(384, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
            )
          )
          (block): Sequential(
            (0): BottleRep(
              (conv1): RepVGGBlock(
                (nonlinearity): ReLU(inplace=True)
                (se): Identity()
                (rbr_identity): BatchNorm2d(384, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (rbr_dense): Sequential(
                  (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                  (bn): BatchNorm2d(384, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                )
                (rbr_1x1): Sequential(
                  (conv): Conv2d(384, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(384, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                )
              )
              (conv2): RepVGGBlock(
                (nonlinearity): ReLU(inplace=True)
                (se): Identity()
                (rbr_identity): BatchNorm2d(384, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (rbr_dense): Sequential(
                  (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                  (bn): BatchNorm2d(384, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                )
                (rbr_1x1): Sequential(
                  (conv): Conv2d(384, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(384, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                )
              )
            )
          )
        )
      )
    )
    (ERBlock_6): Sequential(
      (0): RepVGGBlock(
        (nonlinearity): ReLU(inplace=True)
        (se): Identity()
        (rbr_dense): Sequential(
          (conv): Conv2d(576, 768, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
          (bn): BatchNorm2d(768, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        )
        (rbr_1x1): Sequential(
          (conv): Conv2d(576, 768, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (bn): BatchNorm2d(768, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        )
      )
      (1): BepC3(
        (cv1): Conv_C3(
          (conv): Conv2d(768, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): ReLU(inplace=True)
        )
        (cv2): Conv_C3(
          (conv): Conv2d(768, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): ReLU(inplace=True)
        )
        (cv3): Conv_C3(
          (conv): Conv2d(1024, 768, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(768, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): ReLU(inplace=True)
        )
        (m): RepBlock(
          (conv1): BottleRep(
            (conv1): RepVGGBlock(
              (nonlinearity): ReLU(inplace=True)
              (se): Identity()
              (rbr_identity): BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (rbr_dense): Sequential(
                (conv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
              (rbr_1x1): Sequential(
                (conv): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
            )
            (conv2): RepVGGBlock(
              (nonlinearity): ReLU(inplace=True)
              (se): Identity()
              (rbr_identity): BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (rbr_dense): Sequential(
                (conv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
              (rbr_1x1): Sequential(
                (conv): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
            )
          )
          (block): Sequential(
            (0): BottleRep(
              (conv1): RepVGGBlock(
                (nonlinearity): ReLU(inplace=True)
                (se): Identity()
                (rbr_identity): BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (rbr_dense): Sequential(
                  (conv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                  (bn): BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                )
                (rbr_1x1): Sequential(
                  (conv): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                )
              )
              (conv2): RepVGGBlock(
                (nonlinearity): ReLU(inplace=True)
                (se): Identity()
                (rbr_identity): BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (rbr_dense): Sequential(
                  (conv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                  (bn): BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                )
                (rbr_1x1): Sequential(
                  (conv): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (bn): BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                )
              )
            )
          )
        )
      )
      (2): SimSPPF(
        (cv1): SimConv(
          (conv): Conv2d(768, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(384, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): ReLU(inplace=True)
        )
        (cv2): SimConv(
          (conv): Conv2d(1536, 768, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(768, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): ReLU(inplace=True)
        )
        (m): MaxPool2d(kernel_size=5, stride=1, padding=2, dilation=1, ceil_mode=False)
      )
    )
  )
  (neck): CSPRepBiFPANNeck_P6(
    (reduce_layer0): SimConv(
      (conv): Conv2d(768, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(384, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
      (act): ReLU(inplace=True)
    )
    (Bifusion0): BiFusion(
      (cv1): SimConv(
        (conv): Conv2d(576, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(384, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
      (cv2): SimConv(
        (conv): Conv2d(384, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(384, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
      (cv3): SimConv(
        (conv): Conv2d(1152, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(384, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
      (upsample): Transpose(
        (upsample_transpose): ConvTranspose2d(384, 384, kernel_size=(2, 2), stride=(2, 2))
      )
      (downsample): SimConv(
        (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(384, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
    )
    (Rep_p5): BepC3(
      (cv1): Conv_C3(
        (conv): Conv2d(384, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
      (cv2): Conv_C3(
        (conv): Conv2d(384, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
      (cv3): Conv_C3(
        (conv): Conv2d(512, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(384, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
      (m): RepBlock(
        (conv1): BottleRep(
          (conv1): RepVGGBlock(
            (nonlinearity): ReLU(inplace=True)
            (se): Identity()
            (rbr_identity): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (rbr_dense): Sequential(
              (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            )
            (rbr_1x1): Sequential(
              (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            )
          )
          (conv2): RepVGGBlock(
            (nonlinearity): ReLU(inplace=True)
            (se): Identity()
            (rbr_identity): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (rbr_dense): Sequential(
              (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            )
            (rbr_1x1): Sequential(
              (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            )
          )
        )
        (block): Sequential(
          (0): BottleRep(
            (conv1): RepVGGBlock(
              (nonlinearity): ReLU(inplace=True)
              (se): Identity()
              (rbr_identity): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (rbr_dense): Sequential(
                (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
              (rbr_1x1): Sequential(
                (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
            )
            (conv2): RepVGGBlock(
              (nonlinearity): ReLU(inplace=True)
              (se): Identity()
              (rbr_identity): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (rbr_dense): Sequential(
                (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
              (rbr_1x1): Sequential(
                (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
            )
          )
          (1): BottleRep(
            (conv1): RepVGGBlock(
              (nonlinearity): ReLU(inplace=True)
              (se): Identity()
              (rbr_identity): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (rbr_dense): Sequential(
                (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
              (rbr_1x1): Sequential(
                (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
            )
            (conv2): RepVGGBlock(
              (nonlinearity): ReLU(inplace=True)
              (se): Identity()
              (rbr_identity): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (rbr_dense): Sequential(
                (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
              (rbr_1x1): Sequential(
                (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
            )
          )
        )
      )
    )
    (reduce_layer1): SimConv(
      (conv): Conv2d(384, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(192, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
      (act): ReLU(inplace=True)
    )
    (Bifusion1): BiFusion(
      (cv1): SimConv(
        (conv): Conv2d(384, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(192, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
      (cv2): SimConv(
        (conv): Conv2d(192, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(192, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
      (cv3): SimConv(
        (conv): Conv2d(576, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(192, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
      (upsample): Transpose(
        (upsample_transpose): ConvTranspose2d(192, 192, kernel_size=(2, 2), stride=(2, 2))
      )
      (downsample): SimConv(
        (conv): Conv2d(192, 192, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(192, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
    )
    (Rep_p4): BepC3(
      (cv1): Conv_C3(
        (conv): Conv2d(192, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
      (cv2): Conv_C3(
        (conv): Conv2d(192, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
      (cv3): Conv_C3(
        (conv): Conv2d(256, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(192, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
      (m): RepBlock(
        (conv1): BottleRep(
          (conv1): RepVGGBlock(
            (nonlinearity): ReLU(inplace=True)
            (se): Identity()
            (rbr_identity): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (rbr_dense): Sequential(
              (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            )
            (rbr_1x1): Sequential(
              (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            )
          )
          (conv2): RepVGGBlock(
            (nonlinearity): ReLU(inplace=True)
            (se): Identity()
            (rbr_identity): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (rbr_dense): Sequential(
              (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            )
            (rbr_1x1): Sequential(
              (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            )
          )
        )
        (block): Sequential(
          (0): BottleRep(
            (conv1): RepVGGBlock(
              (nonlinearity): ReLU(inplace=True)
              (se): Identity()
              (rbr_identity): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (rbr_dense): Sequential(
                (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
              (rbr_1x1): Sequential(
                (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
            )
            (conv2): RepVGGBlock(
              (nonlinearity): ReLU(inplace=True)
              (se): Identity()
              (rbr_identity): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (rbr_dense): Sequential(
                (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
              (rbr_1x1): Sequential(
                (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
            )
          )
          (1): BottleRep(
            (conv1): RepVGGBlock(
              (nonlinearity): ReLU(inplace=True)
              (se): Identity()
              (rbr_identity): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (rbr_dense): Sequential(
                (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
              (rbr_1x1): Sequential(
                (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
            )
            (conv2): RepVGGBlock(
              (nonlinearity): ReLU(inplace=True)
              (se): Identity()
              (rbr_identity): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (rbr_dense): Sequential(
                (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
              (rbr_1x1): Sequential(
                (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
            )
          )
        )
      )
    )
    (reduce_layer2): SimConv(
      (conv): Conv2d(192, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(96, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
      (act): ReLU(inplace=True)
    )
    (Bifusion2): BiFusion(
      (cv1): SimConv(
        (conv): Conv2d(192, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(96, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
      (cv2): SimConv(
        (conv): Conv2d(96, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(96, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
      (cv3): SimConv(
        (conv): Conv2d(288, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(96, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
      (upsample): Transpose(
        (upsample_transpose): ConvTranspose2d(96, 96, kernel_size=(2, 2), stride=(2, 2))
      )
      (downsample): SimConv(
        (conv): Conv2d(96, 96, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(96, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
    )
    (Rep_p3): BepC3(
      (cv1): Conv_C3(
        (conv): Conv2d(96, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
      (cv2): Conv_C3(
        (conv): Conv2d(96, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
      (cv3): Conv_C3(
        (conv): Conv2d(128, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(96, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
      (m): RepBlock(
        (conv1): BottleRep(
          (conv1): RepVGGBlock(
            (nonlinearity): ReLU(inplace=True)
            (se): Identity()
            (rbr_identity): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (rbr_dense): Sequential(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            )
            (rbr_1x1): Sequential(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            )
          )
          (conv2): RepVGGBlock(
            (nonlinearity): ReLU(inplace=True)
            (se): Identity()
            (rbr_identity): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (rbr_dense): Sequential(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            )
            (rbr_1x1): Sequential(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            )
          )
        )
        (block): Sequential(
          (0): BottleRep(
            (conv1): RepVGGBlock(
              (nonlinearity): ReLU(inplace=True)
              (se): Identity()
              (rbr_identity): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (rbr_dense): Sequential(
                (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
              (rbr_1x1): Sequential(
                (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
            )
            (conv2): RepVGGBlock(
              (nonlinearity): ReLU(inplace=True)
              (se): Identity()
              (rbr_identity): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (rbr_dense): Sequential(
                (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
              (rbr_1x1): Sequential(
                (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
            )
          )
          (1): BottleRep(
            (conv1): RepVGGBlock(
              (nonlinearity): ReLU(inplace=True)
              (se): Identity()
              (rbr_identity): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (rbr_dense): Sequential(
                (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
              (rbr_1x1): Sequential(
                (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
            )
            (conv2): RepVGGBlock(
              (nonlinearity): ReLU(inplace=True)
              (se): Identity()
              (rbr_identity): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (rbr_dense): Sequential(
                (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
              (rbr_1x1): Sequential(
                (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
            )
          )
        )
      )
    )
    (downsample2): SimConv(
      (conv): Conv2d(96, 96, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn): BatchNorm2d(96, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
      (act): ReLU(inplace=True)
    )
    (Rep_n4): BepC3(
      (cv1): Conv_C3(
        (conv): Conv2d(192, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
      (cv2): Conv_C3(
        (conv): Conv2d(192, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
      (cv3): Conv_C3(
        (conv): Conv2d(256, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(192, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
      (m): RepBlock(
        (conv1): BottleRep(
          (conv1): RepVGGBlock(
            (nonlinearity): ReLU(inplace=True)
            (se): Identity()
            (rbr_identity): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (rbr_dense): Sequential(
              (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            )
            (rbr_1x1): Sequential(
              (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            )
          )
          (conv2): RepVGGBlock(
            (nonlinearity): ReLU(inplace=True)
            (se): Identity()
            (rbr_identity): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (rbr_dense): Sequential(
              (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            )
            (rbr_1x1): Sequential(
              (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            )
          )
        )
        (block): Sequential(
          (0): BottleRep(
            (conv1): RepVGGBlock(
              (nonlinearity): ReLU(inplace=True)
              (se): Identity()
              (rbr_identity): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (rbr_dense): Sequential(
                (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
              (rbr_1x1): Sequential(
                (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
            )
            (conv2): RepVGGBlock(
              (nonlinearity): ReLU(inplace=True)
              (se): Identity()
              (rbr_identity): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (rbr_dense): Sequential(
                (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
              (rbr_1x1): Sequential(
                (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
            )
          )
          (1): BottleRep(
            (conv1): RepVGGBlock(
              (nonlinearity): ReLU(inplace=True)
              (se): Identity()
              (rbr_identity): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (rbr_dense): Sequential(
                (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
              (rbr_1x1): Sequential(
                (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
            )
            (conv2): RepVGGBlock(
              (nonlinearity): ReLU(inplace=True)
              (se): Identity()
              (rbr_identity): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (rbr_dense): Sequential(
                (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
              (rbr_1x1): Sequential(
                (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
            )
          )
        )
      )
    )
    (downsample1): SimConv(
      (conv): Conv2d(192, 192, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn): BatchNorm2d(192, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
      (act): ReLU(inplace=True)
    )
    (Rep_n5): BepC3(
      (cv1): Conv_C3(
        (conv): Conv2d(384, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
      (cv2): Conv_C3(
        (conv): Conv2d(384, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
      (cv3): Conv_C3(
        (conv): Conv2d(512, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(384, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
      (m): RepBlock(
        (conv1): BottleRep(
          (conv1): RepVGGBlock(
            (nonlinearity): ReLU(inplace=True)
            (se): Identity()
            (rbr_identity): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (rbr_dense): Sequential(
              (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            )
            (rbr_1x1): Sequential(
              (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            )
          )
          (conv2): RepVGGBlock(
            (nonlinearity): ReLU(inplace=True)
            (se): Identity()
            (rbr_identity): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (rbr_dense): Sequential(
              (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            )
            (rbr_1x1): Sequential(
              (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            )
          )
        )
        (block): Sequential(
          (0): BottleRep(
            (conv1): RepVGGBlock(
              (nonlinearity): ReLU(inplace=True)
              (se): Identity()
              (rbr_identity): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (rbr_dense): Sequential(
                (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
              (rbr_1x1): Sequential(
                (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
            )
            (conv2): RepVGGBlock(
              (nonlinearity): ReLU(inplace=True)
              (se): Identity()
              (rbr_identity): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (rbr_dense): Sequential(
                (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
              (rbr_1x1): Sequential(
                (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
            )
          )
          (1): BottleRep(
            (conv1): RepVGGBlock(
              (nonlinearity): ReLU(inplace=True)
              (se): Identity()
              (rbr_identity): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (rbr_dense): Sequential(
                (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
              (rbr_1x1): Sequential(
                (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
            )
            (conv2): RepVGGBlock(
              (nonlinearity): ReLU(inplace=True)
              (se): Identity()
              (rbr_identity): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (rbr_dense): Sequential(
                (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
              (rbr_1x1): Sequential(
                (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
            )
          )
        )
      )
    )
    (downsample0): SimConv(
      (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn): BatchNorm2d(384, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
      (act): ReLU(inplace=True)
    )
    (Rep_n6): BepC3(
      (cv1): Conv_C3(
        (conv): Conv2d(768, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
      (cv2): Conv_C3(
        (conv): Conv2d(768, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
      (cv3): Conv_C3(
        (conv): Conv2d(1024, 768, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(768, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): ReLU(inplace=True)
      )
      (m): RepBlock(
        (conv1): BottleRep(
          (conv1): RepVGGBlock(
            (nonlinearity): ReLU(inplace=True)
            (se): Identity()
            (rbr_identity): BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (rbr_dense): Sequential(
              (conv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            )
            (rbr_1x1): Sequential(
              (conv): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            )
          )
          (conv2): RepVGGBlock(
            (nonlinearity): ReLU(inplace=True)
            (se): Identity()
            (rbr_identity): BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            (rbr_dense): Sequential(
              (conv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            )
            (rbr_1x1): Sequential(
              (conv): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
            )
          )
        )
        (block): Sequential(
          (0): BottleRep(
            (conv1): RepVGGBlock(
              (nonlinearity): ReLU(inplace=True)
              (se): Identity()
              (rbr_identity): BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (rbr_dense): Sequential(
                (conv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
              (rbr_1x1): Sequential(
                (conv): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
            )
            (conv2): RepVGGBlock(
              (nonlinearity): ReLU(inplace=True)
              (se): Identity()
              (rbr_identity): BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (rbr_dense): Sequential(
                (conv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
              (rbr_1x1): Sequential(
                (conv): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
            )
          )
          (1): BottleRep(
            (conv1): RepVGGBlock(
              (nonlinearity): ReLU(inplace=True)
              (se): Identity()
              (rbr_identity): BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (rbr_dense): Sequential(
                (conv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
              (rbr_1x1): Sequential(
                (conv): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
            )
            (conv2): RepVGGBlock(
              (nonlinearity): ReLU(inplace=True)
              (se): Identity()
              (rbr_identity): BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (rbr_dense): Sequential(
                (conv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
              (rbr_1x1): Sequential(
                (conv): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
            )
          )
        )
      )
    )
  )
  (detect): Detect(
    (proj_conv): Conv2d(17, 1, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (spp1): PAPPM(
      (scale1): Sequential(
        (0): AvgPool2d(kernel_size=5, stride=2, padding=2)
        (1): BatchNorm2d(192, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(192, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (scale2): Sequential(
        (0): AvgPool2d(kernel_size=9, stride=4, padding=4)
        (1): BatchNorm2d(192, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(192, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (scale3): Sequential(
        (0): AvgPool2d(kernel_size=17, stride=8, padding=8)
        (1): BatchNorm2d(192, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(192, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (scale4): Sequential(
        (0): AdaptiveAvgPool2d(output_size=(1, 1))
        (1): BatchNorm2d(192, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(192, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (scale0): Sequential(
        (0): BatchNorm2d(192, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(192, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (scale_process): Sequential(
        (0): BatchNorm2d(384, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4, bias=False)
      )
      (compression): Sequential(
        (0): BatchNorm2d(480, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(480, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (shortcut): Sequential(
        (0): BatchNorm2d(192, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(192, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (spp2): PAPPM(
      (scale1): Sequential(
        (0): AvgPool2d(kernel_size=5, stride=2, padding=2)
        (1): BatchNorm2d(384, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(384, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (scale2): Sequential(
        (0): AvgPool2d(kernel_size=9, stride=4, padding=4)
        (1): BatchNorm2d(384, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(384, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (scale3): Sequential(
        (0): AvgPool2d(kernel_size=17, stride=8, padding=8)
        (1): BatchNorm2d(384, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(384, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (scale4): Sequential(
        (0): AdaptiveAvgPool2d(output_size=(1, 1))
        (1): BatchNorm2d(384, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(384, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (scale0): Sequential(
        (0): BatchNorm2d(384, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(384, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (scale_process): Sequential(
        (0): BatchNorm2d(384, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4, bias=False)
      )
      (compression): Sequential(
        (0): BatchNorm2d(480, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(480, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (shortcut): Sequential(
        (0): BatchNorm2d(384, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(384, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (spp3): PAPPM(
      (scale1): Sequential(
        (0): AvgPool2d(kernel_size=5, stride=2, padding=2)
        (1): BatchNorm2d(768, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(768, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (scale2): Sequential(
        (0): AvgPool2d(kernel_size=9, stride=4, padding=4)
        (1): BatchNorm2d(768, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(768, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (scale3): Sequential(
        (0): AvgPool2d(kernel_size=17, stride=8, padding=8)
        (1): BatchNorm2d(768, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(768, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (scale4): Sequential(
        (0): AdaptiveAvgPool2d(output_size=(1, 1))
        (1): BatchNorm2d(768, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(768, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (scale0): Sequential(
        (0): BatchNorm2d(768, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(768, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (scale_process): Sequential(
        (0): BatchNorm2d(384, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4, bias=False)
      )
      (compression): Sequential(
        (0): BatchNorm2d(480, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(480, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (shortcut): Sequential(
        (0): BatchNorm2d(768, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(768, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (seg_head): segmenthead(
      (bn1): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
      (conv1): Conv2d(256, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 20, kernel_size=(1, 1), stride=(1, 1))
    )
    (stems): ModuleList(
      (0): Conv(
        (conv): Conv2d(96, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(96, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (1): Conv(
        (conv): Conv2d(192, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(192, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (2): Conv(
        (conv): Conv2d(384, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(384, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (3): Conv(
        (conv): Conv2d(768, 768, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(768, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
    )
    (cls_convs): ModuleList(
      (0): Conv(
        (conv): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(96, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (1): Conv(
        (conv): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(192, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (2): Conv(
        (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(384, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (3): Conv(
        (conv): Conv2d(768, 768, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(768, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
    )
    (reg_convs): ModuleList(
      (0): Conv(
        (conv): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(96, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (1): Conv(
        (conv): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(192, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (2): Conv(
        (conv): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(384, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
      (3): Conv(
        (conv): Conv2d(768, 768, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(768, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): SiLU(inplace=True)
      )
    )
    (cls_preds): ModuleList(
      (0): Conv2d(96, 45, kernel_size=(1, 1), stride=(1, 1))
      (1): Conv2d(192, 45, kernel_size=(1, 1), stride=(1, 1))
      (2): Conv2d(384, 45, kernel_size=(1, 1), stride=(1, 1))
      (3): Conv2d(768, 45, kernel_size=(1, 1), stride=(1, 1))
    )
    (reg_preds): ModuleList(
      (0): Conv2d(96, 68, kernel_size=(1, 1), stride=(1, 1))
      (1): Conv2d(192, 68, kernel_size=(1, 1), stride=(1, 1))
      (2): Conv2d(384, 68, kernel_size=(1, 1), stride=(1, 1))
      (3): Conv2d(768, 68, kernel_size=(1, 1), stride=(1, 1))
    )
  )
)
Training start...
     Epoch  iou_loss  dfl_loss  cls_loss  seg-loss
  0%|          | 0/687 [00:00<?, ?it/s]                                                             /home/re6101029/miniconda3/envs/CVPR/lib/python3.8/site-packages/torch/functional.py:504: UserWarning: torch.meshgrid: in an upcoming release, it will be required to pass the indexing argument. (Triggered internally at ../aten/src/ATen/native/TensorShape.cpp:3483.)
  return _VF.meshgrid(tensors, **kwargs)  # type: ignore[attr-defined]





































































































































































     1/499    0.4815    0.2937     1.694         0: 100%|██████████| 687/687 [05:33<00:00,  2.06it/s
     Epoch  iou_loss  dfl_loss  cls_loss  seg-loss




































































































































































     2/499    0.4619    0.2913     1.422         0: 100%|██████████| 687/687 [05:27<00:00,  2.10it/s
     Epoch  iou_loss  dfl_loss  cls_loss  seg-loss




































































































































































     3/499    0.4201    0.2869     1.298         0: 100%|██████████| 687/687 [05:28<00:00,  2.09it/s
     Epoch  iou_loss  dfl_loss  cls_loss  seg-loss







































































































































































     4/499    0.4987    0.2827     1.226         0: 100%|██████████| 687/687 [05:35<00:00,  2.05it/s
     Epoch  iou_loss  dfl_loss  cls_loss  seg-loss
































































































































































     5/499    0.4657    0.2798     1.153         0: 100%|██████████| 687/687 [05:21<00:00,  2.14it/s
     Epoch  iou_loss  dfl_loss  cls_loss  seg-loss


































































































































































     6/499    0.4602    0.2782     1.135         0: 100%|██████████| 687/687 [05:24<00:00,  2.12it/s
     Epoch  iou_loss  dfl_loss  cls_loss  seg-loss



































































































































































     7/499    0.4498    0.2785     1.103         0: 100%|██████████| 687/687 [05:26<00:00,  2.10it/s
     Epoch  iou_loss  dfl_loss  cls_loss  seg-loss








































































































































































     8/499    0.4453     0.276     1.086         0: 100%|██████████| 687/687 [05:35<00:00,  2.05it/s
     Epoch  iou_loss  dfl_loss  cls_loss  seg-loss







































































































































































     9/499    0.4335    0.2768     1.075         0: 100%|██████████| 687/687 [05:35<00:00,  2.05it/s
     Epoch  iou_loss  dfl_loss  cls_loss  seg-loss




































































































































































    10/499    0.4317    0.2763     1.058         0: 100%|██████████| 687/687 [05:28<00:00,  2.09it/s
     Epoch  iou_loss  dfl_loss  cls_loss  seg-loss





































































































































































    11/499    0.4219    0.2763     1.038         0: 100%|██████████| 687/687 [05:31<00:00,  2.07it/s
     Epoch  iou_loss  dfl_loss  cls_loss  seg-loss








































































































































































    12/499    0.4177     0.275     1.013         0: 100%|██████████| 687/687 [05:36<00:00,  2.04it/s
     Epoch  iou_loss  dfl_loss  cls_loss  seg-loss




































































































































































    13/499    0.4231    0.2748     1.011         0: 100%|██████████| 687/687 [05:28<00:00,  2.09it/s
     Epoch  iou_loss  dfl_loss  cls_loss  seg-loss



































































































































































    14/499    0.4171    0.2756    0.9959         0: 100%|██████████| 687/687 [05:25<00:00,  2.11it/s
     Epoch  iou_loss  dfl_loss  cls_loss  seg-loss





































































































































































    15/499    0.4154    0.2747    0.9863         0: 100%|██████████| 687/687 [05:31<00:00,  2.07it/s
     Epoch  iou_loss  dfl_loss  cls_loss  seg-loss






































































































































































    16/499    0.4128    0.2739    0.9826         0: 100%|██████████| 687/687 [05:31<00:00,  2.07it/s
     Epoch  iou_loss  dfl_loss  cls_loss  seg-loss






































































































































































    17/499    0.4076    0.2745    0.9745         0: 100%|██████████| 687/687 [05:35<00:00,  2.05it/s
     Epoch  iou_loss  dfl_loss  cls_loss  seg-loss





































































































































































    18/499      0.41    0.2731    0.9601         0: 100%|██████████| 687/687 [05:30<00:00,  2.08it/s
     Epoch  iou_loss  dfl_loss  cls_loss  seg-loss






































































































































































    19/499    0.4133    0.2744    0.9673         0: 100%|██████████| 687/687 [05:33<00:00,  2.06it/s
     Epoch  iou_loss  dfl_loss  cls_loss  seg-loss





































































































































































    20/499    0.4115    0.2738     0.965         0: 100%|██████████| 687/687 [05:30<00:00,  2.08it/s
     Epoch  iou_loss  dfl_loss  cls_loss  seg-loss





































































































































































    21/499    0.4066    0.2733    0.9355         0: 100%|██████████| 687/687 [05:30<00:00,  2.08it/s
     Epoch  iou_loss  dfl_loss  cls_loss  seg-loss





































































































































































    22/499    0.4018    0.2734    0.9341         0: 100%|██████████| 687/687 [05:30<00:00,  2.08it/s
     Epoch  iou_loss  dfl_loss  cls_loss  seg-loss






































































































































































    23/499    0.3957    0.2722    0.9258         0: 100%|██████████| 687/687 [05:31<00:00,  2.07it/s
     Epoch  iou_loss  dfl_loss  cls_loss  seg-loss





































































































































































    24/499    0.4042    0.2736    0.9156         0: 100%|██████████| 687/687 [05:31<00:00,  2.07it/s
     Epoch  iou_loss  dfl_loss  cls_loss  seg-loss





































































































































































    25/499       0.4    0.2722    0.9163         0: 100%|██████████| 687/687 [05:31<00:00,  2.07it/s
     Epoch  iou_loss  dfl_loss  cls_loss  seg-loss







































































































































































    26/499    0.3938    0.2732    0.9008         0: 100%|██████████| 687/687 [05:35<00:00,  2.05it/s
     Epoch  iou_loss  dfl_loss  cls_loss  seg-loss






































































































































































    27/499    0.3964    0.2729    0.9002         0: 100%|██████████| 687/687 [05:32<00:00,  2.07it/s
     Epoch  iou_loss  dfl_loss  cls_loss  seg-loss








































































































































































    28/499    0.3953    0.2725    0.8947         0: 100%|██████████| 687/687 [05:36<00:00,  2.04it/s
     Epoch  iou_loss  dfl_loss  cls_loss  seg-loss




































































































































































    29/499    0.3965    0.2729    0.8856         0: 100%|██████████| 687/687 [05:28<00:00,  2.09it/s
     Epoch  iou_loss  dfl_loss  cls_loss  seg-loss





































































































































































    30/499    0.3937    0.2725    0.8725         0: 100%|██████████| 687/687 [05:31<00:00,  2.07it/s
     Epoch  iou_loss  dfl_loss  cls_loss  seg-loss




































































































































































    31/499    0.3898    0.2727    0.8736         0: 100%|██████████| 687/687 [05:28<00:00,  2.09it/s
     Epoch  iou_loss  dfl_loss  cls_loss  seg-loss








































































































































































    32/499    0.3888    0.2712    0.8705         0: 100%|██████████| 687/687 [05:37<00:00,  2.04it/s
     Epoch  iou_loss  dfl_loss  cls_loss  seg-loss





































































































































































    33/499     0.394    0.2731    0.8677         0: 100%|██████████| 687/687 [05:30<00:00,  2.08it/s
     Epoch  iou_loss  dfl_loss  cls_loss  seg-loss







































































































































































    34/499    0.3934    0.2723    0.8593         0: 100%|██████████| 687/687 [05:34<00:00,  2.05it/s
     Epoch  iou_loss  dfl_loss  cls_loss  seg-loss



































































































































































    35/499    0.3826    0.2711    0.8455         0: 100%|██████████| 687/687 [05:28<00:00,  2.09it/s
     Epoch  iou_loss  dfl_loss  cls_loss  seg-loss







































































































































































    36/499    0.3899    0.2719    0.8534         0: 100%|██████████| 687/687 [05:33<00:00,  2.06it/s
     Epoch  iou_loss  dfl_loss  cls_loss  seg-loss






































































































































































    37/499    0.3812    0.2724    0.8381         0: 100%|██████████| 687/687 [05:33<00:00,  2.06it/s
     Epoch  iou_loss  dfl_loss  cls_loss  seg-loss








































































































































































    38/499    0.3881    0.2715    0.8389         0: 100%|██████████| 687/687 [05:35<00:00,  2.05it/s
     Epoch  iou_loss  dfl_loss  cls_loss  seg-loss








































































































































































    39/499    0.3843    0.2717    0.8329         0: 100%|██████████| 687/687 [05:37<00:00,  2.03it/s
     Epoch  iou_loss  dfl_loss  cls_loss  seg-loss






































































































































































    40/499    0.3853     0.272    0.8358         0: 100%|██████████| 687/687 [05:32<00:00,  2.07it/s
     Epoch  iou_loss  dfl_loss  cls_loss  seg-loss










































































































































































    41/499    0.3855    0.2729    0.8309         0: 100%|██████████| 687/687 [05:39<00:00,  2.02it/s
     Epoch  iou_loss  dfl_loss  cls_loss  seg-loss



































































































































































    42/499    0.3835    0.2708    0.8301         0: 100%|██████████| 687/687 [05:28<00:00,  2.09it/s
     Epoch  iou_loss  dfl_loss  cls_loss  seg-loss




































































































































































    43/499    0.3749    0.2714    0.8231         0: 100%|██████████| 687/687 [05:28<00:00,  2.09it/s
     Epoch  iou_loss  dfl_loss  cls_loss  seg-loss







































































































































































    44/499    0.3748    0.2715    0.8153         0: 100%|██████████| 687/687 [05:34<00:00,  2.05it/s
     Epoch  iou_loss  dfl_loss  cls_loss  seg-loss






































































































































































    45/499     0.386    0.2717    0.8175         0: 100%|██████████| 687/687 [05:32<00:00,  2.07it/s
     Epoch  iou_loss  dfl_loss  cls_loss  seg-loss



































































































































































    46/499    0.3795    0.2704     0.809         0: 100%|██████████| 687/687 [05:26<00:00,  2.10it/s
     Epoch  iou_loss  dfl_loss  cls_loss  seg-loss



































































































































































    47/499    0.3837    0.2711    0.8042         0: 100%|██████████| 687/687 [05:25<00:00,  2.11it/s
     Epoch  iou_loss  dfl_loss  cls_loss  seg-loss





































































































































































    48/499    0.3792    0.2708    0.8129         0: 100%|██████████| 687/687 [05:31<00:00,  2.07it/s
     Epoch  iou_loss  dfl_loss  cls_loss  seg-loss








































































































































































    49/499    0.3838    0.2723    0.8075         0: 100%|██████████| 687/687 [05:35<00:00,  2.04it/s
     Epoch  iou_loss  dfl_loss  cls_loss  seg-loss






































































































































































    50/499    0.3754    0.2712    0.8001         0: 100%|██████████| 687/687 [05:32<00:00,  2.07it/s
     Epoch  iou_loss  dfl_loss  cls_loss  seg-loss



    51/499    0.3733    0.2707    0.8358         0:   3%|▎         | 21/687 [00:08<04:39,  2.38it/s]
Traceback (most recent call last):
  File "tools/train.py", line 176, in <module>
    main(args)
  File "tools/train.py", line 165, in main
    trainer.train()
  File "/home/re6101029/CVPR2023comp/yolov6/yolov6/core/engine.py", line 263, in train
    self.train_in_loop(self.epoch)
  File "/home/re6101029/CVPR2023comp/yolov6/yolov6/core/engine.py", line 283, in train_in_loop
    self.train_in_steps(epoch_num, self.step)
  File "/home/re6101029/CVPR2023comp/yolov6/yolov6/core/engine.py", line 331, in train_in_steps
    preds, s_featmaps = self.model(images)
  File "/home/re6101029/miniconda3/envs/CVPR/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/re6101029/CVPR2023comp/yolov6/yolov6/models/yolo.py", line 35, in forward
    x = self.neck(x)
  File "/home/re6101029/miniconda3/envs/CVPR/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/re6101029/CVPR2023comp/yolov6/yolov6/models/reppan.py", line 1079, in forward
    pan_out1 = self.Rep_n5(p_concat_layer1) # P5
  File "/home/re6101029/miniconda3/envs/CVPR/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/re6101029/CVPR2023comp/yolov6/yolov6/layers/common.py", line 578, in forward
    return self.cv3(torch.cat((self.m(self.cv1(x)), self.cv2(x)), dim=1))
  File "/home/re6101029/miniconda3/envs/CVPR/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/re6101029/CVPR2023comp/yolov6/yolov6/layers/common.py", line 512, in forward
    x = self.block(x)
  File "/home/re6101029/miniconda3/envs/CVPR/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/re6101029/miniconda3/envs/CVPR/lib/python3.8/site-packages/torch/nn/modules/container.py", line 217, in forward
    input = module(input)
  File "/home/re6101029/miniconda3/envs/CVPR/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/re6101029/CVPR2023comp/yolov6/yolov6/layers/common.py", line 532, in forward
    outputs = self.conv1(x)
  File "/home/re6101029/miniconda3/envs/CVPR/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/re6101029/CVPR2023comp/yolov6/yolov6/layers/common.py", line 266, in forward
    return self.nonlinearity(self.se(self.rbr_dense(inputs) + self.rbr_1x1(inputs) + id_out))
  File "/home/re6101029/miniconda3/envs/CVPR/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/re6101029/miniconda3/envs/CVPR/lib/python3.8/site-packages/torch/nn/modules/container.py", line 217, in forward
    input = module(input)
  File "/home/re6101029/miniconda3/envs/CVPR/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/re6101029/miniconda3/envs/CVPR/lib/python3.8/site-packages/torch/nn/modules/conv.py", line 463, in forward
    return self._conv_forward(input, self.weight, self.bias)
  File "/home/re6101029/miniconda3/envs/CVPR/lib/python3.8/site-packages/torch/nn/modules/conv.py", line 459, in _conv_forward
    return F.conv2d(input, weight, bias, self.stride,
KeyboardInterrupt